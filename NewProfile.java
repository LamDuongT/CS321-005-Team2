/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Mohammed Alsharaf
 */
public class NewProfile extends javax.swing.JFrame {
    private Courses courses;
    public NewProfile() {
        courses = new Courses();
        initComponents();
    }

    /**
     * Creates new form NewProfile
     *
     * @param classes
     */
    public NewProfile(Object[][] classes) {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        searchtxt = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        usrID = new javax.swing.JTextField();
        usrPass = new javax.swing.JPasswordField();
        usrCPass = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        usrEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        usrName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        studentID = new javax.swing.JTextField();

        jLabel3.setText("jLabel3");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Please fill the following information");

        jLabel2.setText("Username");

        jLabel4.setText("Password");

        jLabel5.setText("Confirm password");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "School information"));

        jLabel6.setText("School");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "George Mason University" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Classes finshed"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Taken"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel12.setText("Search");

        searchtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchtxtActionPerformed(evt);
            }
        });
        searchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchtxtKeyPressed(evt);
            }
        });

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchtxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        usrID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usrIDActionPerformed(evt);
            }
        });

        usrPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usrPassActionPerformed(evt);
            }
        });

        usrCPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usrCPassActionPerformed(evt);
            }
        });

        jButton1.setText("Done");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Email");

        usrEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usrEmailActionPerformed(evt);
            }
        });

        jLabel7.setText("Full Name");

        usrName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usrNameActionPerformed(evt);
            }
        });

        jLabel9.setText("Student ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel8))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(usrEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                        .addComponent(usrPass)
                                        .addComponent(usrCPass, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                        .addComponent(studentID)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(58, 58, 58)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(usrID, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                        .addComponent(usrName))))
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(usrName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(usrID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(usrEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(usrPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(usrCPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(studentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usrPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usrPassActionPerformed
        // TODO add your handling code here:
        this.jButton1ActionPerformed(evt);

    }//GEN-LAST:event_usrPassActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Cancels the process
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // genarate the profile
        //if passwords are different notify the user
        if (!new String(this.usrPass.getPassword()).equals(new String(this.usrCPass.getPassword()))) {
            JOptionPane.showMessageDialog(this, "Passwords are different", "Wrong password", JOptionPane.ERROR_MESSAGE);
            //else if any feild is empty show error message
        } else if (!(this.usrID.getText().isEmpty() && this.usrEmail.getText().isEmpty() && this.usrName.getText().isEmpty()
                && this.usrPass.getPassword().length == 0 && this.usrCPass.getPassword().length == 0)) {
            int id = insertProfileToDataBase();
            String studentName = this.usrName.getText();
            String userID = studentID.getText();
            String username = this.usrID.getText();
            String userEmail = this.usrEmail.getText();
            String userPass = new String(this.usrPass.getPassword());
            Profile profile = new Profile(id,userID,studentName,userEmail,username,userPass,"profile");
            updateCreditTaken(profile);
        } else {
            JOptionPane.showMessageDialog(this, "Please complete all the required fields", "Registration Error", JOptionPane.ERROR_MESSAGE);
        }
        JOptionPane.showMessageDialog(this,"Congratulation You Successfully Created Your Profile, Now You Can Log In."
                ,"System Message",JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void usrNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usrNameActionPerformed
        // TODO add your handling code here:
        this.jButton1ActionPerformed(evt);
    }//GEN-LAST:event_usrNameActionPerformed

    private void usrIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usrIDActionPerformed
        // TODO add your handling code here:
        this.jButton1ActionPerformed(evt);

    }//GEN-LAST:event_usrIDActionPerformed

    private void usrEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usrEmailActionPerformed
        // TODO add your handling code here:
        this.jButton1ActionPerformed(evt);

    }//GEN-LAST:event_usrEmailActionPerformed

    private void usrCPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usrCPassActionPerformed
        // TODO add your handling code here:
        this.jButton1ActionPerformed(evt);

    }//GEN-LAST:event_usrCPassActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // if a school was selected then show classes
        String item = (String) evt.getItem();
        if (jComboBox1.getSelectedIndex() > 0) {
            this.setCoursesList();
        } else {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                model.removeRow(i);
                i = -1;
            }
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void searchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchtxtActionPerformed
        // Searches through the courses lists
        if (jComboBox1.getSelectedIndex() > 0) {
            //creates the list of courses or reset it
            setCoursesList();
            //target string
            String target = searchtxt.getText();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                String valueAtCol0 = (String) model.getValueAt(i, 0);
                String valueAtCol1 = (String) model.getValueAt(i, 1);
                if (!(valueAtCol0.contains(target) || valueAtCol1.contains(target))) {
                    model.removeRow(i);
                    i = -1;
                }
            }
            model.fireTableDataChanged();
        }
    }//GEN-LAST:event_searchtxtActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Searches through the courses lists
        this.searchtxtActionPerformed(evt);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Reset the search
        searchtxt.setText("");
        this.searchtxtActionPerformed(evt);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void searchtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchtxtKeyPressed
        // search as soon the user write something
        System.out.println(evt.getKeyChar());
        if (jComboBox1.getSelectedIndex() > 0) {
            //creates the list of courses or reset it
            setCoursesList();
            //target string
            String target = searchtxt.getText()+((Character.isLetter(evt.getKeyChar())||
                    Character.isDigit(evt.getKeyChar()))?evt.getKeyChar():"");
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                String valueAtCol0 = (String) model.getValueAt(i, 0);
                String valueAtCol1 = (String) model.getValueAt(i, 1);
                if (!(valueAtCol0.contains(target) || valueAtCol1.contains(target))) {
                    model.removeRow(i);
                    i = -1;
                }
            }
            model.fireTableDataChanged();
        }
    }//GEN-LAST:event_searchtxtKeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // saves the courses tha has been checked as taken
        TableModel model = jTable1.getModel();
        Course course = courses.getCourseByName((String) model.getValueAt(jTable1.getSelectedRow(), 0));
        course.setTaken((boolean) model.getValueAt(jTable1.getSelectedRow(), 2));
        courses.getCoursesList().set(courses.getCoursesList().indexOf(course), course);
    }//GEN-LAST:event_jTable1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JTextField studentID;
    private javax.swing.JPasswordField usrCPass;
    private javax.swing.JTextField usrEmail;
    private javax.swing.JTextField usrID;
    private javax.swing.JTextField usrName;
    private javax.swing.JPasswordField usrPass;
    // End of variables declaration//GEN-END:variables
    /**
     * author Mohammed Alsharaf This method sets up the list of courses to let
     * the student select course he/she already took
     */
    public void setCoursesList() {
        this.jTable1.setModel(new DefaultTableModel(new String[]{"ID", "Name", "Taken"}, 0) {
            @Override
            public java.lang.Class<?> getColumnClass(int index) {
                return getValueAt(0, index).getClass();
            }

            @Override
            public boolean isCellEditable(int row, int col) {
                return col == 2;
            }
        });
        //Courses c = new Courses();
        DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
        courses.getCoursesList().forEach((classs) -> {
            model.addRow(new Object[]{((Course) classs).getCourseName(), ((Course) classs).getCourseDesc(), classs.isTaken()});
        });
    }
    private int insertProfileToDataBase() {
        ConnectDB connectdb = new ConnectDB();
        int ret = 9999;
        try {
            String studentName = this.usrName.getText();
            String userID = studentID.getText();
            String username = this.usrID.getText();
            String userEmail = this.usrEmail.getText();
            String userPass = new String(this.usrPass.getPassword());
            Statement statement = connectdb.theConnection.createStatement();
            String query = "SET FOREIGN_KEY_CHECKS=0;";
            statement.executeUpdate(query);
            query = "INSERT INTO collegespdb.tblprofile (netID, studentName, studentEmail, username, password, profileName) ";
            query = query.concat("VALUES(\"").concat(userID).concat("\", \"").concat(studentName).concat("\", \"")
                    .concat(userEmail).concat("\", \"").concat(username).concat("\", \"").concat(userPass).concat("\", \"profile\");");
            statement.executeUpdate(query);
            query = "SELECT LAST_INSERT_ID() as userID";
            ResultSet ResultSet = statement.executeQuery(query);
            while (ResultSet.next()) {
                ret = ResultSet.getInt("userID");
            }
        } catch (SQLException ex) {
        }
        return ret;
    }
    private List<Course> getCourseList(){
        ArrayList<Course> list = new ArrayList<>();
        TableModel model = jTable1.getModel();
        for(int i = 0; i < model.getRowCount();i++){
            if((boolean)model.getValueAt(i, 2)){
                list.add(courses.getCourseByName((String)model.getValueAt(i, 0)));
            }
        }
        return list;
    }

    private void updateCreditTaken(Profile profile) {
        getCourseList().forEach((course) -> {
            int id = insertCreditTaken(course,profile);
            profile.getCoursesTaken().creditsTakenList.add(new CreditTaken(id,profile.getStudentID(),course.getCourseID(),9999));
        });
    }

    private int insertCreditTaken(Course course, Profile profile) {
        ConnectDB connectdb = new ConnectDB();
        int ret = 9999;
        try {
            Statement statement = connectdb.theConnection.createStatement();
            String query = "SET FOREIGN_KEY_CHECKS=0;";
            statement.executeUpdate(query);
            query = "INSERT INTO collegespdb.tblcreditstaken (studentID, courseID, semesterID, isChangable) ";
            query = query.concat("VALUES(").concat(""+profile.getStudentID()).concat(", "+course.getCourseID()).concat(",9999").concat(", false);");
            statement.executeUpdate(query);
            query = "SELECT LAST_INSERT_ID() as creditTakenID";
            ResultSet ResultSet = statement.executeQuery(query);
            while (ResultSet.next()) {
                ret = ResultSet.getInt("userID");
            }
        } catch (SQLException ex) {
        }
        return ret;
    }

}
