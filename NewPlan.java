
import java.util.List;
import javax.swing.JOptionPane;
import java.util.Random;

/*
 *This class is the UI for creating a new plan
 */
/**
 *
 * @author moo7md
 */
public class NewPlan extends javax.swing.JFrame {

    /**
     * Creates new form NewPlan
     */
    private Profile profile;
    public NewPlan() {
        initComponents();
        intiDropBox();
    }
    public NewPlan(Profile profile) {
        initComponents();
        intiDropBox();
        this.profile = profile;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        planname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cataloglistdrop = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        donebtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        major1drop = new javax.swing.JComboBox<>();
        major2drop = new javax.swing.JComboBox<>();
        minor1drop = new javax.swing.JComboBox<>();
        minor2drop = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Please fill in the needed information");

        jLabel2.setText("Plan name");

        jLabel3.setText("Catalog");

        cataloglistdrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cataloglistdropActionPerformed(evt);
            }
        });

        jLabel4.setText("Major 1");

        jLabel5.setText("Minor 1*");

        jLabel8.setText("Major 2*");

        jLabel9.setText("Minor 2*");

        donebtn.setText("Done");
        donebtn.setToolTipText("");
        donebtn.setEnabled(false);
        donebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donebtnActionPerformed(evt);
            }
        });

        cancelbtn.setText("Cancel");

        jLabel6.setText("*These fields are optional");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(planname)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5))
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cataloglistdrop, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(minor1drop, 0, 165, Short.MAX_VALUE)
                                            .addComponent(major1drop, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(major2drop, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(minor2drop, 0, 155, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(donebtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(planname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cataloglistdrop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(major1drop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(major2drop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(minor1drop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minor2drop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(donebtn)
                    .addComponent(cancelbtn)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void donebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donebtnActionPerformed
        // TODO add your handling code here:
        if(this.planname.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please give the plan a name", "Plan Creation Error", JOptionPane.ERROR_MESSAGE);
        }else{
            Catalog cat = new Catalogs().getCatalogByName((String) this.cataloglistdrop.getSelectedItem());
            //Majors majors = new Majors(cat.getCatalogID());
            Major mj1 = new Majors(cat.getCatalogID()).getMajorByName((String) this.major1drop.getSelectedItem());
            Major mj2 = new Majors(cat.getCatalogID()).getMajorByName((String) this.major2drop.getSelectedItem());
            Minor mi1 = new Minors(cat.getCatalogID()).getMinorByName((String) this.minor1drop.getSelectedItem());
            Minor mi2 = new Minors(cat.getCatalogID()).getMinorByName((String) this.minor2drop.getSelectedItem());
              //Major mj1 = majors.getMajorByName((String) this.major1drop.getSelectedItem());
            Plan newPlan = new Plan(new Random().nextInt(1000000),0,cat.getCatalogID(),this.planname.getText(),mj1.getMajorID(),
            mi1.getMinorID(),mj2.getMajorID(),mi2.getMinorID());
            new UpdateData().updatePlan(newPlan, 'i');
        }
    }//GEN-LAST:event_donebtnActionPerformed

    private void cataloglistdropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cataloglistdropActionPerformed
        // TODO add your handling code here:
        this.major1drop.removeAllItems();
        this.major2drop.removeAllItems();
        this.minor1drop.removeAllItems();
        this.minor2drop.removeAllItems();
        this.major1drop.addItem("");
        this.major2drop.addItem("");
        this.minor1drop.addItem("");
        this.minor2drop.addItem("");
        Majors mj = new Majors(new Catalogs().getCatalogByName((String) this.cataloglistdrop.getSelectedItem()).getCatalogID());
        setMajors(mj.getMajorsList());
        Minors mi = new Minors(new Catalogs().getCatalogByName((String) this.cataloglistdrop.getSelectedItem()).getCatalogID());
        setMinors(mi.getMinorList());
        if(this.cataloglistdrop.getSelectedIndex()>0){
            this.major1drop.setEnabled(true);
        }else{
            this.major1drop.setEnabled(false);
        }
    }//GEN-LAST:event_cataloglistdropActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewPlan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewPlan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewPlan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewPlan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewPlan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelbtn;
    private javax.swing.JComboBox<String> cataloglistdrop;
    private javax.swing.JButton donebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> major1drop;
    private javax.swing.JComboBox<String> major2drop;
    private javax.swing.JComboBox<String> minor1drop;
    private javax.swing.JComboBox<String> minor2drop;
    private javax.swing.JTextField planname;
    // End of variables declaration//GEN-END:variables

    private void intiDropBox() {
        this.cataloglistdrop.addItem("");
        Catalogs cat = new Catalogs();
        setCatalogs(cat.getCatalogs());
        this.major1drop.addItem("");
        this.major2drop.addItem("");
        this.minor1drop.addItem("");
        this.minor2drop.addItem("");
//        Majors mj = new Majors(cat.getCatalogByName((String) this.cataloglistdrop.getSelectedItem()).getCatalogID());
//        setMajors(mj.getMajorsList());
//        Minors mi = new Minors(cat.getCatalogByName((String) this.cataloglistdrop.getSelectedItem()).getCatalogID());
//        setMinors(mi.getMinorList());
    }

    private void setCatalogs(List<Catalog> list) {
        list.forEach((cat) -> {
            this.cataloglistdrop.addItem(cat.getCatalogName());
        });
    }

    private void setMajors(List<Major> list) {
        list.forEach((mj) -> {
            this.major1drop.addItem(mj.getMajorName());
            this.major2drop.addItem(mj.getMajorName());
        });
    }

    private void setMinors(List<Minor> list) {
        list.forEach((mj) -> {
            this.minor1drop.addItem(mj.getMinorName());
            this.minor2drop.addItem(mj.getMinorName());
        });
    }
}
